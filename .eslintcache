[{"/Users/harshita/Desktop/my-app/src/index.js":"1","/Users/harshita/Desktop/my-app/src/App.js":"2","/Users/harshita/Desktop/my-app/src/reportWebVitals.js":"3"},{"size":542,"mtime":1610112408632,"results":"4","hashOfConfig":"5"},{"size":4830,"mtime":1610132996158,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610099944850,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"vowwt7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/harshita/Desktop/my-app/src/index.js",[],["16","17"],"/Users/harshita/Desktop/my-app/src/App.js",["18","19"],"import human from './human.png';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button, Form, Modal} from 'semantic-ui-react'\nimport axios from 'axios';\nimport ConfettiCanvas from 'react-confetti-canvas';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: 0,\n      longitude: 0,\n      showModal: false,\n      isDrowning: false,\n      inspirationQuotes: [],\n      quote: '',\n      author: '',\n      addresses: []\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleModalClose = this.handleModalClose.bind(this);\n    this.findQuote = this.findQuote.bind(this);\n    this.fetchAddress = this.fetchAddress.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchQuotes();\n  }\n\n  fetchQuotes = async () => {\n    await axios.get(\"https://type.fit/api/quotes\")\n    .then(response => {\n      this.setState({\n        inspirationQuotes: response.data\n      });\n    })\n    .catch(error => console.error(error))\n  }\n\n  fetchAddress = async () => {\n    const {latitude, longitude} = this.state;\n    await axios.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + latitude + \",\" + longitude + \"&key=AIzaSyA9umthbEuph3aHr6-fWsEiPKtWAVGssfA\")\n    .then(response => {\n      console.log(response.data.results)\n      this.setState({\n        addresses: response.data.results\n      });\n    })\n    .catch(error => console.error(error))\n  }\n\n  onChangeHandler = (event) => {\n    const value = event.target.value;\n    this.setState({\n        [event.target.name] : value\n    })\n  }\n\n  handleSearch = async () => {\n    const search = {\n      longitude: parseFloat(this.state.longitude).toFixed(2),\n      latitude: parseFloat(this.state.latitude).toFixed(2)\n    }\n    this.checkDrowning(search.longitude, search.latitude)\n    this.fetchAddress()\n  }\n\n  checkDrowning = async (longitude, latitude) => {\n    await axios.get(\"https://api.onwater.io/api/v1/results/\" + latitude + \",\" + longitude + \"?access_token=GY-kZ1a_fKoME8juAJcZ\")\n    .then(response => {\n      console.log(response.data)\n      this.setState({\n        showModal: true,\n        isDrowning: response.data.water\n      });\n      this.findQuote(response.data.water)\n    })\n    .catch(error => console.error(error))\n  }\n\n  findQuote = async (isDrowning) => {\n    const {inspirationQuotes} = this.state;\n    if(isDrowning) {\n      const randomQuote = inspirationQuotes[Math.floor(Math.random() * inspirationQuotes.length)]\n      console.log()\n      this.setState({\n        quote: randomQuote.text,\n        author: randomQuote.author\n      });\n      \n    }\n  }\n\n  handleModalClose = () => {\n    this.setState({\n        showModal : false\n    })\n  }\n\n  render() {\n    const {showModal, quote, author, isDrowning, latitude, longitude, addresses} = this.state;\n    const renderConfetti = ()=>{\n      if(!isDrowning){\n        return <ConfettiCanvas\n        duration={0.001} />\n      }\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={human} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Are you drowning?\n          </p>\n        </header>\n        <Container>\n          <Form>\n            <Form.Group widths='equal'>\n              <Form.Field label='latitude'  name='latitude' min='-85' max='85' step=\"0.01\" type='number' control='input'  required onChange={this.onChangeHandler}/>\n              <Form.Field label='longitude' name='longitude' min='-180' max='180' step=\"0.01\" type='number' control='input' required onChange={this.onChangeHandler}/>\n            </Form.Group>\n            <Button variant=\"primary\" onClick={this.handleSearch}>\n              Find me!\n            </Button>\n          </Form>\n        </Container>\n        <Modal open={showModal} onClose={this.handleModalClose}>\n          <Modal.Header closeButton>\n            Where am I?\n          </Modal.Header>\n          <Modal.Content>\n            <b>{isDrowning? 'You\\'re drowning but it\\'s ok!': 'You\\'re safe on land! Congrats!'}</b>\n            <p> {(addresses[0])? \"You\\'re near \" + (addresses[0]).formatted_address: \"We have no clue where you are\"}</p>\n            <br></br>\n            <img src={\"https://maps.googleapis.com/maps/api/staticmap?markers=size:small%7C\" + latitude + ',' +longitude + \"&zoom=11&size=400x400&key=AIzaSyBoyAr-jdEmaxd9jSVHBwCkeohtXOZdN2g\"}></img>\n            <br></br>\n            {renderConfetti()}\n            <br></br>\n            <p>{isDrowning? 'Here\\'s a motivational quote to get you out of sad waters:': 'Here\\'s a quote to cheer your success on:'}</p>\n            <p> </p>\n            <br></br>\n            {quote}\n            {' ~' + author}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/harshita/Desktop/my-app/src/reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":136,"column":38,"nodeType":"26","messageId":"27","endLine":136,"endColumn":39,"suggestions":"28"},{"ruleId":"29","severity":1,"message":"30","line":138,"column":13,"nodeType":"31","endLine":138,"endColumn":193},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["34","35"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"36","fix":"37","desc":"38"},{"messageId":"39","fix":"40","desc":"41"},"removeEscape",{"range":"42","text":"43"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"44","text":"45"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[4128,4129],"",[4128,4128],"\\"]