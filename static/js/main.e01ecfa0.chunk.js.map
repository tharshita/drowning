{"version":3,"sources":["human.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","fetchQuotes","a","axios","get","then","response","setState","inspirationQuotes","data","catch","error","console","fetchAddress","state","latitude","longitude","log","results","addresses","onChangeHandler","event","value","target","name","handleSearch","search","parseFloat","toFixed","checkDrowning","showModal","isDrowning","water","findQuote","randomQuote","Math","floor","random","length","quote","text","author","handleModalClose","bind","this","className","src","human","alt","Container","Form","Group","widths","Field","label","min","max","step","type","control","required","onChange","Button","variant","onClick","Modal","open","onClose","Header","closeButton","Content","formatted_address","duration","renderConfetti","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e01ecfa0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/human.440047f1.png\";","import human from './human.png';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button, Form, Modal} from 'semantic-ui-react'\nimport axios from 'axios';\nimport ConfettiCanvas from 'react-confetti-canvas';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: 0,\n      longitude: 0,\n      showModal: false,\n      isDrowning: false,\n      inspirationQuotes: [],\n      quote: '',\n      author: '',\n      addresses: []\n    };\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleModalClose = this.handleModalClose.bind(this);\n    this.findQuote = this.findQuote.bind(this);\n    this.fetchAddress = this.fetchAddress.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchQuotes();\n  }\n\n  fetchQuotes = async () => {\n    await axios.get(\"https://type.fit/api/quotes\")\n    .then(response => {\n      this.setState({\n        inspirationQuotes: response.data\n      });\n    })\n    .catch(error => console.error(error))\n  }\n\n  fetchAddress = async () => {\n    const {latitude, longitude} = this.state;\n    await axios.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + latitude + \",\" + longitude + \"&key=AIzaSyA9umthbEuph3aHr6-fWsEiPKtWAVGssfA\")\n    .then(response => {\n      console.log(response.data.results)\n      this.setState({\n        addresses: response.data.results\n      });\n    })\n    .catch(error => console.error(error))\n  }\n\n  onChangeHandler = (event) => {\n    const value = event.target.value;\n    this.setState({\n        [event.target.name] : value\n    })\n  }\n\n  handleSearch = async () => {\n    const search = {\n      longitude: parseFloat(this.state.longitude).toFixed(2),\n      latitude: parseFloat(this.state.latitude).toFixed(2)\n    }\n    this.checkDrowning(search.longitude, search.latitude)\n    this.fetchAddress()\n  }\n\n  checkDrowning = async (longitude, latitude) => {\n    await axios.get(\"https://api.onwater.io/api/v1/results/\" + latitude + \",\" + longitude + \"?access_token=GY-kZ1a_fKoME8juAJcZ\")\n    .then(response => {\n      console.log(response.data)\n      this.setState({\n        showModal: true,\n        isDrowning: response.data.water\n      });\n      this.findQuote()\n    })\n    .catch(error => console.error(error))\n  }\n\n  findQuote = async () => {\n    const {inspirationQuotes} = this.state;\n    const randomQuote = inspirationQuotes[Math.floor(Math.random() * inspirationQuotes.length)]\n    console.log()\n    this.setState({\n      quote: randomQuote.text,\n      author: randomQuote.author\n    });\n  }\n\n  handleModalClose = () => {\n    this.setState({\n        showModal : false\n    })\n  }\n\n  render() {\n    const {showModal, quote, author, isDrowning, latitude, longitude, addresses} = this.state;\n    const renderConfetti = ()=>{\n      if(!isDrowning){\n        return <ConfettiCanvas\n        duration={0.001} />\n      }\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={human} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Are you drowning?\n          </p>\n        </header>\n        <Container>\n          <Form>\n            <Form.Group widths='equal'>\n              <Form.Field label='latitude'  name='latitude' min='-85' max='85' step=\"0.01\" type='number' control='input'  required onChange={this.onChangeHandler}/>\n              <Form.Field label='longitude' name='longitude' min='-180' max='180' step=\"0.01\" type='number' control='input' required onChange={this.onChangeHandler}/>\n            </Form.Group>\n            <Button variant=\"primary\" onClick={this.handleSearch}>\n              Find me!\n            </Button>\n          </Form>\n        </Container>\n        <Modal open={showModal} onClose={this.handleModalClose}>\n          <Modal.Header closeButton>\n            Where am I?\n          </Modal.Header>\n          <Modal.Content>\n            <b>{isDrowning? 'You\\'re drowning but it\\'s ok!': 'You\\'re safe on land! Congrats!'}</b>\n            <p> {(addresses[0])? \"You're near \" + (addresses[0]).formatted_address: \"We have no clue where you are\"}</p>\n            <br></br>\n            <img src={\"https://maps.googleapis.com/maps/api/staticmap?markers=size:small%7C\" + latitude + ',' +longitude + \"&zoom=11&size=400x400&key=AIzaSyBoyAr-jdEmaxd9jSVHBwCkeohtXOZdN2g\"} alt=\"google map\"></img>\n            <br></br>\n            {renderConfetti()}\n            <br></br>\n            <p>{isDrowning? 'Here\\'s a motivational quote to get you out of sad waters:': 'Here\\'s a quote to cheer your success on:'}</p>\n            <p> </p>\n            <br></br>\n            {quote}\n            {' ~' + author}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}